 (define (double x) (+ x x)) 
 (define (halve x) (floor (/ x 2))) 
  
 (define (* a b) 
   (define (iter accumulator a b) 
     (cond ((= b 0) accumulator) 
           ((even? b) (iter accumulator (double a) (halve b))) 
           (else (iter (+ accumulator a) a (- b 1))))) 
   (iter 0 a b)) 
  

(display "6 is expected. And output is:")
(display (* 2 3))
(newline)
(display "6 is expected. And output is:")
(display (* 3 2))
(newline)
(display "8 is expected. And output is:")
(display (* 4 2))
(newline)
(display "15 is expected. And output is:")
(display (* 5 3))
(newline)
(display "12 is expected. And output is:")
(display (* 6 2))
(newline)
(display "18 is expected. And output is:")
(display (* 6 3))

(exit)